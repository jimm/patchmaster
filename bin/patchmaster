#!/usr/bin/env ruby
#
# usage: patchmaster [-n] [-d] [pm_file]
#
# Starts PatchMaster and optionally loads pm_file.
#
# The -n flag tells PatchMaster to not use MIDI. All MIDI errors such as not
# being able to connect to the MIDI instruments specified in pm_file are
# ignored, and no MIDI data is sent/received. That is useful if you want to
# run PatchMaster without actually talking to any MIDI instruments.

require 'optparse'

use_midi = true
OptionParser.new do |opts|
  opts.banner = "usage: patchmaster [options] [pm_file]"
  opts.on("-d", "--debug", "Turn on debug mode") { $DEBUG = true }
  opts.on("-n", "--no-midi", "Turn off MIDI processing") { use_midi = false }
end.parse!(ARGV)

# Must require patchmaster here, after handling options, because Singleton
# initialze code checks $DEBUG.
require 'patchmaster'

app = PM::Main.instance
app.no_midi! if !use_midi
app.load(ARGV[0]) if ARGV[0]
app.run
